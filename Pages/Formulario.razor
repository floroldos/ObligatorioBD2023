@page "/formulario"
@inject DatabaseService DatabaseService
@inject NavigationManager NavigationManager

<h2>FORMULARIO INICIO</h2>

@if(error){
    <h3>ERROR: @error_str</h3>
}

<!-- :v -->

<form @onsubmit="OnSubmitForm">
    <input type="text" name="ci" id="ci" placeholder="Ingrese su cedula" @bind="formCI">
    <input type="text" name="nombre" id="nombre" placeholder="Ingrese su nombre">
    <input type="text" name="apellido" id="apellido" placeholder="Ingrese su apellido">
    <input type="date" name="fechaN" id="FechaN" placeholder="Ingrese su fecha de nacimiento"> 
    <select name="carneSalud" id="carneSalud">
        <option value="null" default>Ingrese una opcion</option>
        <option value="si">Si</option>
        <option value="no">No</option>
    </select>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@code{
    public bool error = false;
    public string error_str = "";
    public string? formCI;

    private async Task OnSubmitForm()
    {
        int ci;
        try{
            //(formCI ?? "a") si formCI no es un numero se intenta parsear J a int y eso da error :D
            ci = int.Parse(formCI ?? "J");
            bool res = DatabaseService.CheckUser(ci);

            if(res){
                error = false;
               
            }else{
                error = true;
                error_str = "El usuario no existe";
                await Task.Delay(2000);
                NavigationManager.NavigateTo("/registro");                
            }
        }

        catch(Exception){
            error = true;
            error_str = "La cedula debe ser un numero";
            return;
        }
    }
}