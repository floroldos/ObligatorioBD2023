@page "/"

@inject DatabaseService DatabaseService
@inject NavigationManager NavigationManager

<PageTitle>Iniciar sesión</PageTitle>

<div id="contenedor" class="container">
    <div class="row">
        <div class="col-sm-5 mx-auto">
                    <div class="background">
                        <div class="shape"></div>
                        <div class="shape"></div>
                    </div>
                    <form @onsubmit="OnSubmitForm" id="login">
                        <h1 id = "iniciar-sesion"> INICIAR SESIÓN </h1>
                        <br>
                        <div class="form-group">
                            <label for="ci">Cedula</label>
                            <input type="text" id="ci" class="form-control" placeholder="Ingrese su cedula..." @bind="formCI">
                        </div>
                        <br>
                        <div class="form-group">
                            <label for="Password">Contraseña</label>
                            <input type="password" class="form-control" id="Password" placeholder="Password" @bind="password">
                        </div>
                        <br>
                        <button type="submit" class="btn btn-primary">Ingresar</button>
                        <br>
                        <br>
                        @if(error_str.Length > 0)
                        {
                            <div class="alert alert-danger" role="alert">
                                @error_str
                            </div>
                        }
                    </form>
        </div>
    </div>
</div>



@code {
    public string? formCI;
    public string? password;
    public string error_str = "";
   private async Task OnSubmitForm()
    {
        if(formCI == null || password == null){
            error_str = "Debe llenar todos los campos";
            return;
        }

        try{
            int ci = int.Parse(formCI);
            bool res = DatabaseService.CheckUser(ci);

            if(res){
                await Task.Delay(2000);
                NavigationManager.NavigateTo("/formulario");
            }else{
                error_str = "El usuario no existe... \n\n\n Redireccionando a la pagina de registro";
                await Task.Delay(2000);
                NavigationManager.NavigateTo("/registro");                
            }
            
        }
        catch(Exception e){
            Console.WriteLine(e.Message);
            error_str = "La cédula debe ser un número.";
            return;
        }
    }
}